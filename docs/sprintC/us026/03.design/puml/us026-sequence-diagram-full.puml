@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "GSM" as GSM
participant ":AssignVehiclesUI" as ui
participant "AssignVehiclesController" as ctrl
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as plat
participant "agendaEntryRepository:\nAgendaEntryRepository" as agendaRepo
participant "AgendaEntryMapper" as agendaMapper
participant AgendaEntryDTO as AgendaEntryDTO
participant "AgendaEntry" as agendaEntry
participant "Vehicle" as vehicle
participant "vehicleRepository:\nVehicleRepository" as vehicleRepo
participant "VehicleMapper" as VehicleMapper
participant "VehicleDTO" as VehicleDTO
participant "ApplicationSession" as app

activate GSM

GSM -> ui : asks to assign vehicles to an agenda entry
activate ui

ui -> ctrl : create
activate ctrl

ctrl -> agendaMapper : create

ctrl -> RepositorySingleton : getInstance()
activate RepositorySingleton
RepositorySingleton --> ctrl: repositories
deactivate RepositorySingleton

ctrl -> plat : getAgendaEntryRepository()
activate plat
plat --> ctrl: AgendaEntryRepository()
deactivate plat

ctrl -> plat : getVehicleRepository()
activate plat
plat --> ctrl: vehicleRepository
deactivate plat

ui -> ctrl : getVehiclesListDTO()
ui -> ctrl : getVehiclesListDTO()

ctrl -> agendaRepo : getAgendaEntryWithoutDoneList(authenticationController.getCurrentUserEmail()
activate agendaRepo
agendaRepo --> ctrl: agendaEntryList
deactivate agendaRepo


ctrl -> agendaMapper : toDtoList(agendaEntryList)
activate agendaMapper


loop for each agendaEntry in agendaEntryList
  agendaMapper -> AgendaEntryDTO : agendaEntryDTO = toDTO(agendaEntry)
  activate AgendaEntryDTO
end

agendaMapper --> ctrl : agendaEntryDTOList
deactivate agendaMapper
deactivate AgendaEntryDTO

ctrl -> vehicleRepo : getVehicleList()
activate vehicleRepo
vehicleRepo --> ctrl: vehicles
deactivate vehicleRepo

ctrl -> VehicleMapper : getVehiclesListDTO(vehicles)
activate VehicleMapper
loop for each vehicle in vehicles
  VehicleMapper -> VehicleDTO : vehicleDTO = toDTO(vehicle)
  activate VehicleDTO
end
deactivate VehicleDTO
VehicleMapper --> ctrl : vehicleDTOList
deactivate VehicleMapper

ctrl --> ui : agendaEntryDTOList
ctrl --> ui : vehicleDTOList
deactivate ctrl

ui --> GSM : shows the list of entries in the agenda\n and the list of vehicles and asks to select one of each

GSM -> ui : selects entry and vehicles

ui -> ctrl : assignVehciles(selectedEntry, vehicleList))
activate ctrl

ctrl -> agendaRepo : assignVehicles(mapperAgenda.toEntity(agendaEntry), mapperVehicle.toEntityList(vehiclesList)
activate agendaRepo

agendaRepo -> "AgendaEntry": setAssociatedVehicles(vehicleList)

agendaRepo -> ctrl: success/insuccess
deactivate agendaRepo
deactivate agendaEntry

ctrl --> ui : success/insuccess
deactivate ctrl

ui --> GSM : shows (in)success message
deactivate ui

deactivate GSM

@enduml
