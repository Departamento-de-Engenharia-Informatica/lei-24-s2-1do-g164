@startuml
skinparam classAttributeIconSize 0
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto
skinparam classAttributeIconSize 0

title Class Diagram


class ToDoEntry{
    greenSpace
    description
    urgencyDegree
    status
    expectedDuration
}

class AgendaEntry {
    date
    associatedTeam
    associatedVehicles
}

class AgendaEntryDTO {
    entryID
    description
    plannedDate
    status
}

class SystemUser {
    name
    email
    password
    phone
}

class AgendaEntryRepository {
    - ArrayList<AgendaEntry> agendaEntries
    + getAgendaEntries()
    + updateEntryDate(AgendaEntry, newDate)
}

class Repositories {
    - agendaEntryRepository
    - Repositories()
    + getInstance()
    + getAgendaEntryRepository()
}

class AgendaEntryMapper {
    + toDTO(agendaEntry)
    + toEntity(agendaEntryDTO)
    + toDTOList(List<AgendaEntry>)
}

class PostponeAgendaEntryGUIController {
    - AgendaEntryRepository agendaEntryRepository
    - AgendaEntryMapper agendaEntryMapper
    + getAvailableAgendaEntryList()
    + getAgendaEntryDTOsList()
    getAgendaEntryRepository()
    + PostponeAgendaEntry(agendaEntryDTO, LocalDate)
}

class AgendaGUI {
    - PostponeAgendaEntryGUIController agendaController
    + displayAgendaEntries(List<agendaEntryDTO>)
    + selectEntry()
    + selectNewDate()
    + displayMessage(success)
}

AgendaGUI .> PostponeAgendaEntryGUIController
PostponeAgendaEntryGUIController ..> Repositories : repositories
Repositories --> "1" AgendaEntryRepository
Repositories -> Repositories : instance
PostponeAgendaEntryGUIController .> AgendaEntryMapper
PostponeAgendaEntryGUIController --> AgendaEntryRepository : uses

SystemUser <|- GSM
ToDoEntry <|-- AgendaEntry

GSM "1" -- "1" AgendaGUI
AgendaEntryMapper "1"->"*" AgendaEntry : creates
AgendaEntry "*" <-- "1" AgendaEntryRepository : manages
AgendaEntryDTO "*" <-- "1" AgendaEntryMapper : creates

@enduml
