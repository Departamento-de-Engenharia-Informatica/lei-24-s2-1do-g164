@startuml
skinparam classAttributeIconSize 0
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto
skinparam classAttributeIconSize 0

class AgendaEntry {
    date
    associatedTeam
    associatedVehicles
}

class AgendaEntryDTO {

    date
    greenSpace
    description
    expectedDuration
    urgencyDegree
    entryStatus
    associatedTeam
    associatedVehicles

}

class SystemUser {
    name
    email
    password
    phone
}


class AgendaEntryRepository {
    - ArrayList<AgendaEntry> agendaEntries

   +getEntrysByCollaborator(String currentUserEmail)
   +getAgendaEntryByDescriptionAndGreenspace(dto.description, dto.greenSpace)
   +update(entry, EntryStatus.DONE)
}

class Repositories {
    - agendaEntryRepository

    - Repositories()
    + getInstance()
    + getAgendaEntryRepository()

}

class AgendaEntryMapper {
    + toDtoList(List<AgendaEntry> toDoEntryList)

}


class MarkTaskCompletedController {
    - AgendaEntryRepository agendaEntryRepository
    - AgendaEntryMapper agendaEntryMapper

    + getEntrysByCollaborator()
    +completedAgendaEntry(AgendaEntryDTO dto)

}

class MarkTaskCompletedUI{

}

MarkTaskCompletedUI .> MarkTaskCompletedController
MarkTaskCompletedController ..> Repositories : repositories
Repositories --> "1" AgendaEntryRepository
Repositories -> Repositories : instance
MarkTaskCompletedController .> AgendaEntryMapper
MarkTaskCompletedController --> AgendaEntryRepository : uses

SystemUser <|- Collaborator
ToDoEntry <|-- AgendaEntry

Collaborator "1" -- "1" MarkTaskCompletedUI
AgendaEntry "*" <-- "1" AgendaEntryRepository : stores
AgendaEntryDTO "*" <-- "1" AgendaEntryMapper : creates


@enduml
