@startuml
skinparam classAttributeIconSize 0
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto
skinparam classAttributeIconSize 0

class AgendaEntry {
    date
    associatedTeam
    associatedVehicles
    +setAssociatedTeam(team)
}

class AgendaEntryDTO {

    date
    greenSpace
    description
    expectedDuration
    urgencyDegree
    entryStatus
    associatedTeam
    associatedVehicles

}

class SystemUser {
    name
    email
    password
    phone
}


class AgendaEntryRepository {
    - ArrayList<AgendaEntry> agendaEntries
    + getAgendaEntryListWithoutTeam(authenticationController.getCurrentUserEmail())
    + getAgendaEntry(description, greenSpace)
    + getTeamByCollaborators(teamDTO.getCollaborators()
}

class Repositories {
    - agendaEntryRepository
    -teamRepository

    - Repositories()
    + getInstance()
    + getAgendaEntryRepository()
    + getTeamRepository()

}

class AgendaEntryMapper {
    + toDtoList(agendaEntryList)

}


class TeamToAgendaEntryController {
    - AgendaEntryRepository agendaEntryRepository
    - AgendaEntryMapper agendaEntryMapper
    - EmailService emailService

    +getAgendaEntriesDTOWithoutTeam()
    +showAvailableTeamsDTO()
    +assignTeamToAgendaEntry(selectedEntry, teamEntry)
    +sendNotificationEmails(entry.getAssociatedTeam()
}

class AgendaUI {

}

class Team{
maximumSize
minimumSize

}

class TeamRepository{
    ArrayList<Team> teams
    +getTeams()
    +getTeamByCollaborators(teamDTO.getCollaborators()

}

class TeamMapper {
+toDtoList(ArrayList<Team> teams)
+toDtoList(teamList)

}

class TeamDTO {
ArrayList<Team> teams
}

interface EmailService {
    + sendEmail(to, body)
}

class DeiService implements EmailService {
    + sendEmail(to, body)
}

class GmailService implements EmailService {
    + sendEmail(to, body)
}

class OutlookService implements EmailService {
    + sendEmail(to, body)
}

class ApplicationSession{
    -authenticationRepository: AuthenticationRepository
        -emailService: EmailService
        -CONFIGURATION_FILENAME
        -COMPANY_DESIGNATION

        -getProperties(): Properties
        +createEmailService(): EmailService
}




AgendaUI .> TeamToAgendaEntryController
TeamToAgendaEntryController ..> Repositories : repositories
Repositories --> "1" AgendaEntryRepository
Repositories -> Repositories : instance
TeamToAgendaEntryController .> AgendaEntryMapper
TeamToAgendaEntryController .> TeamMapper
TeamToAgendaEntryController --> AgendaEntryRepository : uses

SystemUser <|- GSM
ToDoEntry <|-- AgendaEntry

GSM "1" -- "1" AgendaUI
AgendaEntry "*" <-- "1" AgendaEntryRepository : stores
AgendaEntryDTO "*" <-- "1" AgendaEntryMapper : creates
AgendaEntry"1" --> "1" Team: assigned to
Team "*" <-- "1" TeamRepository : stores
AgendaEntryDTO "*" <-- "1" AgendaEntryMapper : creates
TeamDTO "*" <-- "1" TeamMapper : creates


ApplicationSession ..> EmailService

@enduml

