 @startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction


class ":CreateTeamProposalUI" as CreateTeamProposalUI {

    +showCreatedTeam(Team)
}


class ":CreateTeamProposalController" as CreateTeamProposalController {
+getSkills()
    +createTeamProposal(min, max, skills)

}



class ":Repositories" as Repositories {
    +getInstance(): Repositories
    +getSkillRepository(): SkillRepository
    +getCollaboratorRepository()
    +getTeamRepository()
}

class "SkillRepository" as SkillRepository {
    +getSkills()

}


class "CollaboratorRepository" as CollaboratorRepository {
    +getCollaboratorsBySkills(collaborators, skills)
}

class "TeamRepository" as TeamRepository {
    +createTeam(selectedCollaborators)
    -addTeam(Team)
}
note bottom of TeamRepository: the selected collaborators were selected\nbased on the max and min size   on\nCreateTeamProposalController

class "Team" as Team {
    -Integer maxSize
    -Integer minSize
    -ArrayList<Skill> requiredSkills
    -ArrayList<Collaborator> collaborators

    +create(selectedCollaborators)

}

 note right of "CollaboratorRepository" : filter collaborators\nbased on their skills

CreateTeamProposalUI ..> CreateTeamProposalController
Repositories -> Repositories : instance
CreateTeamProposalController ..> Repositories: repositories
Repositories --> "1"SkillRepository
Repositories -->"1" CollaboratorRepository
Repositories --> "1"TeamRepository
CreateTeamProposalController ..> TeamRepository: TeamRepository
TeamRepository "1" --> "*"Team: team
CreateTeamProposalController --> Team

@enduml
