 @startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction


class ":CreateTeamProposalUI" as CreateTeamProposalUI {

}


class ":CreateTeamProposalController" as CreateTeamProposalController {
+getSkills()
    +createTeamProposal(max, min, skills)

}



class ":Repositories" as Repositories {
    +getInstance(): Repositories
    +getSkillRepository(): SkillRepository
    +getCollaboratorRepository()
    +getTeamRepository()
}

class "SkillRepository" as SkillRepository {
    +getSkills()

}

class HRM {}

class SystemUser {
    name
    email
    password
    phone
}

class "CollaboratorRepository" as CollaboratorRepository {
     getDeactivatedCollaboratorsBySkills(skills)
}

class "TeamRepository" as TeamRepository {
    +createTeam(selectedCollaborators, skills )
    -addTeam()
}
note bottom of TeamRepository: the selected collaborators were selected\nbased on the max and min size   on\nCreateTeamProposalController

class "Team" as Team {
    -Integer maxSize
    -Integer minSize
    -ArrayList<Skill> requiredSkills
    -ArrayList<Collaborator> collaborators

    +create(selectedCollaborators)

}

 note right of "CollaboratorRepository" : filter collaborators\nbased on their skills
SystemUser <|-- HRM
CreateTeamProposalUI ..> CreateTeamProposalController
Repositories -> Repositories : instance
CreateTeamProposalController ..> Repositories: repositories
Repositories --> "1"SkillRepository
Repositories -->"1" CollaboratorRepository
Repositories --> "1"TeamRepository
CreateTeamProposalController ..> TeamRepository: TeamRepository
TeamRepository  --> "*"Team
CreateTeamProposalController --> Team
CreateTeamProposalController ..> SkillRepository: skillRepository
CreateTeamProposalController ..> CollaboratorRepository: collaboratorRepository
HRM -->  Team: generates
@enduml
