@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "GSM" as Employee
participant "ToDoListUI" as UI
participant ":RegisterToDoEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "GreenSpaceRepository\n:greenSpaceRepository" as GreenRepo
participant "ToDoEntryRepository\n:toDoEntryRepository" as TaskRepo
participant "ToDoEntryMapper"
participant "ToDoEntryDTO"

activate Employee

    Employee -> UI : asks to add a new entry to the "To-Do List"

    activate UI

        UI -> CTRL : getGreenSpaceList()
        activate CTRL

            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton
                CTRL -> PLAT : getGreenSpaceRepository()
                activate PLAT
                PLAT --> CTRL : greenSpaceRepository
                deactivate PLAT




            CTRL -> GreenRepo : getGreenSpaceList()
            activate GreenRepo

                GreenRepo --> CTRL : greenSpaceList
            deactivate GreenRepo

            CTRL -> "ToDoEntryMapper" : getGreenSpaceDTOsList(greenSpaceList)
            activate "ToDoEntryMapper"

            loop for each greenSpace in greenSpaceList
                ToDoEntryMapper -> ToDoEntryDTO: toDTO(greenSpace)
                activate ToDoEntryDTO
              ToDoEntryDTO --> ToDoEntryMapper : greenSpaceDTO
                deactivate ToDoEntryDTO


            end

            ToDoEntryMapper --> CTRL: greenSpaceDTOsList
            deactivate ToDoEntryMapper

            CTRL --> UI : greenSpaceDTOsList
        deactivate CTRL

        UI --> Employee : displays the Green Spaces and asks to select one
    deactivate UI

    Employee -> UI : selects the desired Green Space
    activate UI

    UI -> CTRL : getUrgencyDegreeList()
            activate CTRL

    CTRL -> UrgencyDegreesENUM : getUrgencyDegreeList()
    deactivate CTRL
    activate UrgencyDegreesENUM
    UrgencyDegreesENUM --> CTRL : UrgencyDegreesENUM.values()
deactivate UrgencyDegreesENUM
activate CTRL
CTRL -> UI : urgencyDegreeList
deactivate CTRL
        UI -> Employee : displays urgency degrees and asks to select one
    deactivate UI

    Employee -> UI : selects the desired urgency degree
    activate UI
    UI -> Employee: asks to type description and expected duration
    deactivate UI
    Employee -> UI : types the requested data
    activate UI

        UI -> "ToDoEntryDTO" : ToDoEntryDTO(description, expectedDuration,\n greenSpace, UrgencyDegree)
        activate ToDoEntryDTO
        UI <-- "ToDoEntryDTO" : toDoEntryDTO
deactivate "ToDoEntryDTO"

        UI -> CTRL : registerToDoEntry(toDoEntryDTO)
        deactivate UI
        activate CTRL




CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton
                CTRL -> PLAT : getToDoEntryRepository()
                activate PLAT
                PLAT --> CTRL : toDoEntryRepository
                deactivate PLAT
                CTRL -> "ToDoEntryMapper" : toEntity(toDoEntryDTO)
                            activate "ToDoEntryMapper"


                                "ToDoEntryMapper" -> ToDoEntry : ToDoEntry(toDoEntryDTO.description, toDoEntryDTO.expectedDuration, \ntoDoEntryDTO.greenSpace, toDoEntryDTO.urgencyDegree)
                                activate ToDoEntry
                                ToDoEntry --> "ToDoEntryMapper" : toDoEntry
                             deactivate ToDoEntry
                                "ToDoEntryMapper" --> CTRL : toDoEntry
                            deactivate "ToDoEntryMapper"
                CTRL -> TaskRepo : registerToDoEntry(toDoEntry)

            activate TaskRepo


TaskRepo --> TaskRepo : isToDoEntryUnique(toDoEntry)
                TaskRepo --> CTRL : success

            deactivate TaskRepo

            CTRL --> UI : success
        deactivate CTRL
        activate UI

        UI --> Employee : displays message of (in)success
    deactivate UI

deactivate Employee

@enduml
