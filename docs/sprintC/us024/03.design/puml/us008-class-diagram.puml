@startuml
skinparam classAttributeIconSize 0
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto
skinparam classAttributeIconSize 0

title Class Diagram

class AgendaEntry {
    entryID
    description
    plannedDate
    status
}

class AgendaEntryDTO {
    entryID
    description
    plannedDate
    status
}

class SystemUser {
    name
    email
    password
    phone
}

class AgendaEntryRepository {
    - ArrayList<AgendaEntry> agendaEntries
    + getAgendaEntries()
    + updateEntryDate(AgendaEntry, newDate)
}

class Repositories {
    - agendaEntryRepository

    - Repositories()
    + getInstance()
    + getAgendaEntryRepository()
}

class AgendaEntryMapper {
    + toDTO(AgendaEntry)
    + toEntity(AgendaEntryDTO, newDate)
}

class AgendaController {
    - AgendaEntryRepository agendaEntryRepository
    - AgendaEntryMapper agendaEntryMapper
    + getAgendaEntries()
    + updateAgendaEntryDate(AgendaEntryDTO, newDate)
}

class AgendaUI {
    - AgendaController agendaController
    + displayAgendaEntries(List<AgendaEntryDTO>)
    + selectEntry()
    + selectNewDate()
    + displayMessage(success)
}


AgendaUI .> AgendaController
AgendaController ..> Repositories : repositories
Repositories --> "1" AgendaEntryRepository
Repositories -> Repositories : instance
AgendaController .> AgendaEntryMapper
AgendaController --> AgendaEntryRepository : uses

SystemUser <|- Employee

Employee "1" -- "1" AgendaUI
AgendaEntry "*" <-- "1" AgendaEntryRepository : stores
AgendaEntryDTO "*" <-- "1" AgendaEntryMapper : creates

@enduml
